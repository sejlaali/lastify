{"ast":null,"code":"var _jsxFileName = \"/Users/sejlaali/General_Assembly/sei/05-week/05-friday/Project2/project2/react-project2/src/Components/OneResult.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\nimport \"./Components.css\";\ndotenv.config();\nlet key = process.env.REACT_APP_API_KEY;\n\nclass OneResult extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getImg = () => {\n      axios.get(\"https://itunes.apple.com/search?term=drake\").then(res => this.setState({\n        img: res.data.results[0].artworkUrl60\n      }));\n    };\n\n    this.state = {\n      name: \"\",\n      info: \"\",\n      img: \"\"\n    };\n    this.getResults = this.getResults.bind(this);\n    this.getResults();\n  }\n\n  async getResults() {\n    const artistName = this.props.location.state.option === \"artist\" ? this.props.location.state.inputVal : this.props.location.state.songInputValue;\n    let res = await axios.get(\"http://ws.audioscrobbler.com/2.0/?method=artist.getinfo&artist=\".concat(artistName, \"&api_key=\").concat(key, \"&format=json\"));\n    const infoWithLink = res.data.artist.bio.summary;\n    const info = infoWithLink.replace('<a href=\"https://www.last.fm/music/Rihanna\">Read more on Last.fm</a>', \".\");\n    this.setState({\n      name: res.data.artist.name,\n      info\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.state.name), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.info), React.createElement(\"img\", {\n      src: this.state.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default OneResult;","map":{"version":3,"sources":["/Users/sejlaali/General_Assembly/sei/05-week/05-friday/Project2/project2/react-project2/src/Components/OneResult.jsx"],"names":["React","Component","axios","dotenv","config","key","process","env","REACT_APP_API_KEY","OneResult","constructor","props","getImg","get","then","res","setState","img","data","results","artworkUrl60","state","name","info","getResults","bind","artistName","location","option","inputVal","songInputValue","infoWithLink","artist","bio","summary","replace","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,kBAAP;AAEAA,MAAM,CAACC,MAAP;AACA,IAAIC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAtB;;AAEA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAChCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,MAZmB,GAYV,MAAM;AACbV,MAAAA,KAAK,CAACW,GAAN,+CAAwDC,IAAxD,CAA6DC,GAAG,IAC9D,KAAKC,QAAL,CAAc;AACZC,QAAAA,GAAG,EAAEF,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBC;AADb,OAAd,CADF;AAKD,KAlBkB;;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAGXN,MAAAA,GAAG,EAAE;AAHM,KAAb;AAKA,SAAKO,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKD,UAAL;AACD;;AAUD,QAAMA,UAAN,GAAmB;AACjB,UAAME,UAAU,GACd,KAAKf,KAAL,CAAWgB,QAAX,CAAoBN,KAApB,CAA0BO,MAA1B,KAAqC,QAArC,GACI,KAAKjB,KAAL,CAAWgB,QAAX,CAAoBN,KAApB,CAA0BQ,QAD9B,GAEI,KAAKlB,KAAL,CAAWgB,QAAX,CAAoBN,KAApB,CAA0BS,cAHhC;AAIA,QAAIf,GAAG,GAAG,MAAMb,KAAK,CAACW,GAAN,0EACoDa,UADpD,sBAC0ErB,GAD1E,kBAAhB;AAGA,UAAM0B,YAAY,GAAGhB,GAAG,CAACG,IAAJ,CAASc,MAAT,CAAgBC,GAAhB,CAAoBC,OAAzC;AACA,UAAMX,IAAI,GAAGQ,YAAY,CAACI,OAAb,CACX,sEADW,EAEX,GAFW,CAAb;AAKA,SAAKnB,QAAL,CAAc;AACZM,MAAAA,IAAI,EAAEP,GAAG,CAACG,IAAJ,CAASc,MAAT,CAAgBV,IADV;AAEZC,MAAAA;AAFY,KAAd;AAID;;AAEDa,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKf,KAAL,CAAWC,IAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKD,KAAL,CAAWE,IAAhB,CAFF,EAGE;AAAK,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWJ,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAjD+B;;AAoDlC,eAAeR,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\nimport \"./Components.css\";\n\ndotenv.config();\nlet key = process.env.REACT_APP_API_KEY;\n\nclass OneResult extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      info: \"\",\n      img: \"\"\n    };\n    this.getResults = this.getResults.bind(this);\n    this.getResults();\n  }\n\n  getImg = () => {\n    axios.get(`https://itunes.apple.com/search?term=drake`).then(res =>\n      this.setState({\n        img: res.data.results[0].artworkUrl60\n      })\n    );\n  };\n\n  async getResults() {\n    const artistName =\n      this.props.location.state.option === \"artist\"\n        ? this.props.location.state.inputVal\n        : this.props.location.state.songInputValue;\n    let res = await axios.get(\n      `http://ws.audioscrobbler.com/2.0/?method=artist.getinfo&artist=${artistName}&api_key=${key}&format=json`\n    );\n    const infoWithLink = res.data.artist.bio.summary;\n    const info = infoWithLink.replace(\n      '<a href=\"https://www.last.fm/music/Rihanna\">Read more on Last.fm</a>',\n      \".\"\n    );\n\n    this.setState({\n      name: res.data.artist.name,\n      info\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.state.name}</h1>\n        <h5>{this.state.info}</h5>\n        <img src={this.state.img} />\n      </div>\n    );\n  }\n}\n\nexport default OneResult;\n"]},"metadata":{},"sourceType":"module"}