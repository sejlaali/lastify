{"ast":null,"code":"var _jsxFileName = \"/Users/sejlaali/General_Assembly/sei/05-week/05-friday/Project2/project2/react-project2/src/Components/Input.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\nimport ResultDetails from \"./ResultDetails\";\nimport \"./Components.css\";\nimport Itunes from \"./Itunes\";\nimport { Link } from \"react-router-dom\";\ndotenv.config();\nlet key = process.env.REACT_APP_API_KEY;\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = evt => {\n      this.setState({\n        inputValue: evt.currentTarget.value\n      });\n    };\n\n    this.optionSelected = evt => {\n      this.setState({\n        option: evt.currentTarget.value,\n        inputValue: \"\",\n        allResults: []\n      });\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      if (this.state.inputValue === \"\") alert(\"Please type in either an artist or song name for results\");else {\n        if (this.state.option === \"artist\") {\n          let url = \"http://ws.audioscrobbler.com/2.0/?method=artist.gettoptracks&artist=\".concat(this.state.inputValue, \"&api_key=\").concat(key, \"&limit=36&format=json\");\n          axios.get(url).then(res => {\n            res.data.toptracks ? this.setState({\n              allResults: res.data.toptracks.track,\n              artist: res.data.toptracks.track.artist.name,\n              activeSearch: true\n            }) : alert('Please check your spelling');\n          });\n        } else {\n          let url = \"http://ws.audioscrobbler.com/2.0/?method=track.search&track=\".concat(this.state.inputValue, \"&api_key=\").concat(key, \"&limit=36&format=json\");\n          axios.get(url).then(res => {\n            //can I use result from the return rather than mapping over allResults again?\n            // this.state.inputValue !== allResults ? alert('Please check your spelling') :\n            this.setState({\n              allResults: res.data.results.trackmatches.track,\n              activeSearch: true\n            });\n          });\n        }\n      }\n    };\n\n    this.playNext = result => {\n      this.setState({\n        currentSong: result.name\n      }, () => {\n        axios // .get(`https://itunes.apple.com/search?term=firestone`)\n        .get(\"https://itunes.apple.com/search?term=\".concat(this.state.currentSong)).then(res => {\n          console.log(res);\n          this.setState({\n            preview: res.data.results[0].previewUrl\n          });\n        });\n      });\n    };\n\n    this.state = {\n      inputValue: \"\",\n      allResults: [],\n      artist: \"\",\n      activeSearch: false,\n      topTracks: [],\n      option: \"artist\",\n      currentSong: \"\",\n      preview: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const url = \"http://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key=\".concat(key, \"&format=json\");\n    axios.get(url).then(res => {\n      this.setState({\n        topTracks: res.data.tracks.track\n      });\n    });\n  }\n\n  render() {\n    const header = this.state.activeSearch ? React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Currently Playing: \", this.state.currentSong.toUpperCase()) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Search Below\");\n    const topTracks = this.state.topTracks.map((track, i) => React.createElement(\"li\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, track.name, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, track.artist.name)));\n    return React.createElement(\"div\", {\n      className: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"title\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"LAST\", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"ify\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, header, React.createElement(\"select\", {\n      class: \"styled-select\",\n      onChange: this.optionSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"artist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Artist\"), React.createElement(\"option\", {\n      value: \"song\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Song\")), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      autocomplete: \"off\",\n      type: \"text\",\n      name: \"song\",\n      value: this.state.inputValue,\n      placeholder: \"Search for an artist or song\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"ENTER\"))), React.createElement(\"div\", {\n      id: \"song-results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.state.allResults.map((result, i) => React.createElement(ResultDetails, {\n      result: result,\n      index: i,\n      option: this.state.option,\n      inputValue: this.state.artist,\n      playNext: this.playNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }))), this.state.allResults.length <= 0 ? React.createElement(\"div\", {\n      className: \"top-tracks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"TOP TRACKS OF 2019\"), React.createElement(\"ol\", {\n      className: \"top-track-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \" \", topTracks)) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(Itunes, {\n      preview: this.state.preview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["/Users/sejlaali/General_Assembly/sei/05-week/05-friday/Project2/project2/react-project2/src/Components/Input.jsx"],"names":["React","Component","axios","dotenv","ResultDetails","Itunes","Link","config","key","process","env","REACT_APP_API_KEY","Input","constructor","props","handleChange","evt","setState","inputValue","currentTarget","value","optionSelected","option","allResults","handleSubmit","preventDefault","state","alert","url","get","then","res","data","toptracks","track","artist","name","activeSearch","results","trackmatches","playNext","result","currentSong","console","log","preview","previewUrl","topTracks","componentDidMount","tracks","render","header","toUpperCase","map","i","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEAH,MAAM,CAACI,MAAP;AACA,IAAIC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAtB;;AAEA,MAAMC,KAAN,SAAoBX,SAApB,CAA8B;AAC5BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,YAfmB,GAeJC,GAAG,IAAI;AACpB,WAAKC,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAEF,GAAG,CAACG,aAAJ,CAAkBC;AADlB,OAAd;AAGD,KAnBkB;;AAAA,SAqBnBC,cArBmB,GAqBFL,GAAG,IAAI;AACtB,WAAKC,QAAL,CAAc;AACZK,QAAAA,MAAM,EAAEN,GAAG,CAACG,aAAJ,CAAkBC,KADd;AAEZF,QAAAA,UAAU,EAAE,EAFA;AAGZK,QAAAA,UAAU,EAAE;AAHA,OAAd;AAKD,KA3BkB;;AAAA,SA6BnBC,YA7BmB,GA6BJR,GAAG,IAAI;AACpBA,MAAAA,GAAG,CAACS,cAAJ;AACA,UAAI,KAAKC,KAAL,CAAWR,UAAX,KAA0B,EAA9B,EACES,KAAK,4DAAL,CADF,KAEK;AACH,YAAI,KAAKD,KAAL,CAAWJ,MAAX,KAAsB,QAA1B,EAAoC;AAClC,cAAIM,GAAG,iFACL,KAAKF,KAAL,CAAWR,UADN,sBAEKV,GAFL,0BAAP;AAGAN,UAAAA,KAAK,CAAC2B,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,GAAG,IAAI;AACzBA,YAAAA,GAAG,CAACC,IAAJ,CAASC,SAAT,GAAsB,KAAKhB,QAAL,CAAc;AAClCM,cAAAA,UAAU,EAAEQ,GAAG,CAACC,IAAJ,CAASC,SAAT,CAAmBC,KADG;AAElCC,cAAAA,MAAM,EAAEJ,GAAG,CAACC,IAAJ,CAASC,SAAT,CAAmBC,KAAnB,CAAyBC,MAAzB,CAAgCC,IAFN;AAGlCC,cAAAA,YAAY,EAAE;AAHoB,aAAd,CAAtB,GAIKV,KAAK,CAAC,4BAAD,CAJV;AAKD,WAND;AAOD,SAXD,MAWO;AACH,cAAIC,GAAG,yEACH,KAAKF,KAAL,CAAWR,UADR,sBAEOV,GAFP,0BAAP;AAGEN,UAAAA,KAAK,CAAC2B,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,GAAG,IAAI;AACzB;AACN;AACI,iBAAKd,QAAL,CAAc;AACdM,cAAAA,UAAU,EAAEQ,GAAG,CAACC,IAAJ,CAASM,OAAT,CAAiBC,YAAjB,CAA8BL,KAD5B;AAEdG,cAAAA,YAAY,EAAE;AAFA,aAAd;AAIH,WAPG;AAQL;AACF;AACF,KA3DkB;;AAAA,SAsEnBG,QAtEmB,GAsERC,MAAM,IAAI;AACnB,WAAKxB,QAAL,CACE;AACEyB,QAAAA,WAAW,EAAED,MAAM,CAACL;AADtB,OADF,EAIE,MAAM;AACJlC,QAAAA,KAAK,CACL;AADK,SAEF2B,GAFH,gDAE+C,KAAKH,KAAL,CAAWgB,WAF1D,GAGGZ,IAHH,CAGQC,GAAG,IAAI;AACRY,UAAAA,OAAO,CAACC,GAAR,CAAYb,GAAZ;AACH,eAAKd,QAAL,CAAc;AACZ4B,YAAAA,OAAO,EAAEd,GAAG,CAACC,IAAJ,CAASM,OAAT,CAAiB,CAAjB,EAAoBQ;AADjB,WAAd;AAGA,SARJ;AASD,OAdH;AAgBD,KAvFkB;;AAGjB,SAAKpB,KAAL,GAAa;AACXR,MAAAA,UAAU,EAAE,EADD;AAEXK,MAAAA,UAAU,EAAE,EAFD;AAGXY,MAAAA,MAAM,EAAE,EAHG;AAIXE,MAAAA,YAAY,EAAE,KAJH;AAKXU,MAAAA,SAAS,EAAE,EALA;AAMXzB,MAAAA,MAAM,EAAE,QANG;AAOXoB,MAAAA,WAAW,EAAE,EAPF;AAQXG,MAAAA,OAAO,EAAE;AARE,KAAb;AAUD;;AAgDDG,EAAAA,iBAAiB,GAAG;AAClB,UAAMpB,GAAG,iFAA0EpB,GAA1E,iBAAT;AACAN,IAAAA,KAAK,CAAC2B,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoBC,GAAG,IAAI;AACzB,WAAKd,QAAL,CAAc;AACZ8B,QAAAA,SAAS,EAAEhB,GAAG,CAACC,IAAJ,CAASiB,MAAT,CAAgBf;AADf,OAAd;AAGD,KAJD;AAKD;;AAqBDgB,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKzB,KAAL,CAAWW,YAAX,GACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwB,KAAKX,KAAL,CAAWgB,WAAX,CAAuBU,WAAvB,EAAxB,CADa,GAGb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF;AAKA,UAAML,SAAS,GAAG,KAAKrB,KAAL,CAAWqB,SAAX,CAAqBM,GAArB,CAAyB,CAACnB,KAAD,EAAQoB,CAAR,KACzC;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGpB,KAAK,CAACE,IADT,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,KAAK,CAACC,MAAN,CAAaC,IAAlB,CAFF,CADgB,CAAlB;AAOA,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAwB,MAAA,EAAE,EAAC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADwB,CAA/B,CADD,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGe,MADH,EAEE;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA8B,MAAA,QAAQ,EAAE,KAAK9B,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAFF,EAME;AAAM,MAAA,QAAQ,EAAE,KAAKG,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,YAAY,EAAC,KADf;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWR,UAJpB;AAKE,MAAA,WAAW,EAAC,8BALd;AAME,MAAA,QAAQ,EAAE,KAAKH,YANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,CANF,CANF,EAwBE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKW,KAAL,CAAWH,UAAX,CAAsB8B,GAAtB,CAA0B,CAACZ,MAAD,EAASa,CAAT,KACzB,oBAAC,aAAD;AACE,MAAA,MAAM,EAAEb,MADV;AAEE,MAAA,KAAK,EAAEa,CAFT;AAGE,MAAA,MAAM,EAAE,KAAK5B,KAAL,CAAWJ,MAHrB;AAIE,MAAA,UAAU,EAAE,KAAKI,KAAL,CAAWS,MAJzB;AAKE,MAAA,QAAQ,EAAE,KAAKK,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAxBF,EAoCG,KAAKd,KAAL,CAAWH,UAAX,CAAsBgC,MAAtB,IAAgC,CAAhC,GACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAoCR,SAApC,CAFF,CADD,GAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1CJ,EA4CE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWmB,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5CF,CADF;AAgDD;;AAvJ2B;;AA0J9B,eAAejC,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\nimport ResultDetails from \"./ResultDetails\";\nimport \"./Components.css\";\nimport Itunes from \"./Itunes\";\nimport {Link} from \"react-router-dom\"\n\ndotenv.config();\nlet key = process.env.REACT_APP_API_KEY;\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValue: \"\",\n      allResults: [],\n      artist: \"\",\n      activeSearch: false,\n      topTracks: [],\n      option: \"artist\",\n      currentSong: \"\",\n      preview: \"\"\n    };\n  }\n\n  handleChange = evt => {\n    this.setState({\n      inputValue: evt.currentTarget.value\n    });\n  };\n\n  optionSelected = evt => {\n    this.setState({\n      option: evt.currentTarget.value,\n      inputValue: \"\",\n      allResults: []\n    });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    if (this.state.inputValue === \"\")\n      alert(`Please type in either an artist or song name for results`);\n    else {\n      if (this.state.option === \"artist\") {\n        let url = `http://ws.audioscrobbler.com/2.0/?method=artist.gettoptracks&artist=${\n          this.state.inputValue\n        }&api_key=${key}&limit=36&format=json`;\n        axios.get(url).then(res => {\n          res.data.toptracks ?  this.setState({\n            allResults: res.data.toptracks.track,\n            artist: res.data.toptracks.track.artist.name,\n            activeSearch: true,\n          }) : alert('Please check your spelling') \n        })\n      } else {\n          let url = `http://ws.audioscrobbler.com/2.0/?method=track.search&track=${\n              this.state.inputValue\n            }&api_key=${key}&limit=36&format=json`;\n            axios.get(url).then(res => {\n              //can I use result from the return rather than mapping over allResults again?\n        // this.state.inputValue !== allResults ? alert('Please check your spelling') :\n            this.setState({\n            allResults: res.data.results.trackmatches.track,\n            activeSearch: true,\n          });\n        });\n      }\n    }\n  };\n\n  componentDidMount() {\n    const url = `http://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key=${key}&format=json`;\n    axios.get(url).then(res => {\n      this.setState({\n        topTracks: res.data.tracks.track\n      });\n    });\n  }\n\n  playNext = result => {\n    this.setState(\n      {\n        currentSong: result.name\n      },\n      () => {\n        axios\n        // .get(`https://itunes.apple.com/search?term=firestone`)\n          .get(`https://itunes.apple.com/search?term=${this.state.currentSong}`)\n          .then(res => {\n               console.log(res)\n            this.setState({\n              preview: res.data.results[0].previewUrl\n            })\n           });\n      }\n    );\n  };\n\n  render() {\n    const header = this.state.activeSearch ? (\n      <h3>Currently Playing: {this.state.currentSong.toUpperCase()}</h3>\n    ) : (\n      <h3>Search Below</h3>\n    );\n    const topTracks = this.state.topTracks.map((track, i) => (\n      <li key={i}>\n        {track.name}\n        <h5>{track.artist.name}</h5>\n      </li>\n    ));\n\n    return (\n      <div className=\"input\">\n       <Link className=\"title\" to=\"/\"><h1>\n          LAST<span>ify</span>\n        </h1>\n        </Link>\n        <hr />\n        <div>\n          {header}\n          <select class=\"styled-select\" onChange={this.optionSelected}>\n            <option value=\"artist\">Artist</option>\n            <option value=\"song\">Song</option>\n          </select>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              autocomplete=\"off\"\n              type=\"text\"\n              name=\"song\"\n              value={this.state.inputValue}\n              placeholder=\"Search for an artist or song\"\n              onChange={this.handleChange}\n            />\n            <button type=\"submit\">ENTER</button>\n          </form>\n        </div>\n        <div id=\"song-results\">\n          {this.state.allResults.map((result, i) => (\n            <ResultDetails\n              result={result}\n              index={i}\n              option={this.state.option}\n              inputValue={this.state.artist}\n              playNext={this.playNext}\n            />\n          ))}\n        </div>\n\n        {this.state.allResults.length <= 0 ? (\n          <div className=\"top-tracks\">\n            <h2>TOP TRACKS OF 2019</h2>\n            <ol className=\"top-track-details\"> {topTracks}</ol>\n          </div>\n        ) : (\n          <div />\n        )}\n        <Itunes preview={this.state.preview} />\n      </div>\n    );\n  }\n}\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}