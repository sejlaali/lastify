{"ast":null,"code":"var _jsxFileName = \"/Users/sejlaali/General_Assembly/sei/05-week/05-friday/Project2/project2/react-project2/src/Components/Input.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\nimport ResultDetails from './ResultDetails';\nimport './Components.css';\nimport OneResult from './OneResult';\ndotenv.config();\nlet key = process.env.REACT_APP_API_KEY;\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = evt => {\n      this.setState({\n        inputValue: evt.currentTarget.value\n      });\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      if (this.state.inputValue === \"\") alert(\"Please type in artist name for results\");else {\n        // const url = `http://ws.audioscrobbler.com/2.0/?method=track.search&track=${this.state.inputValue}&api_key=${key}&format=json`\n        const url = \"http://ws.audioscrobbler.com/2.0/?method=artist.gettoptracks&artist=\".concat(this.state.inputValue, \"&api_key=\").concat(key, \"&limit=26&format=json\");\n        axios.get(url).then(res => {\n          this.setState({\n            allResults: res.data.toptracks.track,\n            artist: this.state.inputValue,\n            activeSearch: true //   inputValue: \"\"\n\n          });\n        });\n      }\n    };\n\n    this.getImg = () => {\n      const url = \"https://api.deezer.com/artist/drake\";\n      axios.get(url).then(res => {\n        console.log(res);\n      });\n    };\n\n    this.state = {\n      inputValue: \"\",\n      allResults: [],\n      activeSearch: false,\n      artist: \"\",\n      topTracks: []\n    };\n  }\n\n  componentDidMount() {\n    const url = \"http://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key=\".concat(key, \"&format=json\");\n    axios.get(url).then(res => {\n      this.setState({\n        topTracks: res.data.tracks.track\n      });\n    });\n  }\n\n  render() {\n    const header = this.state.activeSearch ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Currently Searching: \", this.state.artist.toUpperCase()) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Search Below\");\n    const topTracks = this.state.topTracks.map(track => React.createElement(\"div\", {\n      className: \"top-tracks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, track.name), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, track.artist.name)));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, header, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"song\",\n      value: this.state.inputValue,\n      placeholder: \"Search for an artist\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"ENTER\"))), React.createElement(\"div\", {\n      className: \"song-results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.allResults.map((result, i) => React.createElement(ResultDetails, {\n      result: result,\n      index: i,\n      inputValue: this.state.artist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Top Tracks\"), topTracks));\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["/Users/sejlaali/General_Assembly/sei/05-week/05-friday/Project2/project2/react-project2/src/Components/Input.jsx"],"names":["React","Component","axios","dotenv","ResultDetails","OneResult","config","key","process","env","REACT_APP_API_KEY","Input","constructor","props","handleChange","evt","setState","inputValue","currentTarget","value","handleSubmit","preventDefault","state","alert","url","get","then","res","allResults","data","toptracks","track","artist","activeSearch","getImg","console","log","topTracks","componentDidMount","tracks","render","header","toUpperCase","map","name","result","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\nimport ResultDetails from './ResultDetails'\nimport './Components.css'\nimport OneResult from './OneResult'\n\n\ndotenv.config();\nlet key = process.env.REACT_APP_API_KEY;\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValue: \"\",\n      allResults: [],\n      activeSearch: false,\n      artist: \"\",\n      topTracks: []\n    }\n  }\n\n  handleChange = evt => {\n    this.setState({\n      inputValue: evt.currentTarget.value\n    });\n  };\n\n  handleSubmit = (evt) => {\n      evt.preventDefault()\n      if (this.state.inputValue === \"\") alert(`Please type in artist name for results`)\n      else {\n          // const url = `http://ws.audioscrobbler.com/2.0/?method=track.search&track=${this.state.inputValue}&api_key=${key}&format=json`\n          const url = `http://ws.audioscrobbler.com/2.0/?method=artist.gettoptracks&artist=${this.state.inputValue}&api_key=${key}&limit=26&format=json`\n          axios.get(url).then((res) => {\n              this.setState ({\n                  allResults: res.data.toptracks.track,\n                  artist: this.state.inputValue,\n                  activeSearch: true,\n                //   inputValue: \"\"\n                })\n            })}\n        }\n\n        componentDidMount() {\n            const url = `http://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key=${key}&format=json`\n            axios.get(url).then((res) => {\n                this.setState ({\n                    topTracks: res.data.tracks.track\n                })\n            })\n        }\n\n        getImg = () => {\n            const url = `https://api.deezer.com/artist/drake`\n            axios.get(url).then((res) => {\n                console.log(res)\n            })\n        }\n        \n        render() {\n            const header = this.state.activeSearch ? <h1>Currently Searching: {(this.state.artist).toUpperCase()}</h1> : <h1>Search Below</h1> \n        const topTracks = this.state.topTracks.map(track =>\n           <div className=\"top-tracks\">\n            <h4>{track.name}</h4>\n            <h5>{track.artist.name}</h5>\n            </div>)\n\n            return (\n\n                <div>\n        <div className=\"input\">\n          {header}\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"text\"\n              name=\"song\"\n              value={this.state.inputValue}\n              placeholder=\"Search for an artist\"\n              onChange={this.handleChange}\n              />\n            <button type=\"submit\">ENTER</button>\n          </form>\n        </div>\n        <div className=\"song-results\">\n      {this.state.allResults.map((result, i) => \n            <ResultDetails result={result} index={i} inputValue={this.state.artist}/>)}\n\n           <h2>Top Tracks</h2>\n            {topTracks}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}