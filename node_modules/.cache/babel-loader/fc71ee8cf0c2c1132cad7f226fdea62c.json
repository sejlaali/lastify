{"ast":null,"code":"var _jsxFileName = \"/Users/sejlaali/General_Assembly/sei/05-week/05-friday/Project2/project2/react-project2/src/Components/Youtube.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Youtube extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      youtube: \"\"\n    };\n  }\n\n  async fetchVideo() {\n    let res = await axios.get(\"https://www.googleapis.com/youtube/v3/search?key=AIzaSyDZ45_22-Kzo_oZGO0ClgxbX7vuvT3M5-wmaxResults=4&part=snippet&\", {\n      params: {\n        part: 'snippet',\n        maxResults: 5,\n        key: 'AIzaSyDZ45_22-Kzo_oZGO0ClgxbX7vuvT3M5-w',\n        q: this.props.inputValue\n      }\n    });\n\n    componentDidMount = () => {\n      $.get(\"https://content.googleapis.com/youtube/v3/playlistItems?maxResults=4&part=snippet&playlistId={SOME_PLAYLIST_ID}&key={MY_API_KEY}\", data => {\n        this.setState({\n          items: data\n        });\n      });\n    };\n\n    console.log(res);\n  } //  searchByKeyword = () => {\n  //     var results = YouTube.Search.list('id,snippet', {q: 'dogs', maxResults: 5});\n  //     for(var i in results.items) {\n  //       var item = results.items[i];\n  //       Logger.log('[%s] Title: %s', item.id.videoId, item.snippet.title);\n  //     }\n  //   }\n\n\n  render() {\n    this.fetchVideo();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Youtube;","map":{"version":3,"sources":["/Users/sejlaali/General_Assembly/sei/05-week/05-friday/Project2/project2/react-project2/src/Components/Youtube.jsx"],"names":["React","Component","axios","Youtube","constructor","props","state","youtube","fetchVideo","res","get","params","part","maxResults","key","q","inputValue","componentDidMount","$","data","setState","items","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAChCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAED,QAAMC,UAAN,GAAmB;AACf,QAAIC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,uHAAgI;AAC5IC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE,SADF;AAEJC,QAAAA,UAAU,EAAE,CAFR;AAGJC,QAAAA,GAAG,EAAE,yCAHD;AAIJC,QAAAA,CAAC,EAAE,KAAKV,KAAL,CAAWW;AAJV;AADoI,KAAhI,CAAhB;;AASAC,IAAAA,iBAAiB,GAAG,MAAM;AACtBC,MAAAA,CAAC,CAACR,GAAF,CAAM,kIAAN,EAA2IS,IAAD,IAAU;AACjJ,aAAKC,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAEF;AAAT,SAAd;AACF,OAFD;AAGD,KAJH;;AAKAG,IAAAA,OAAO,CAACC,GAAR,CAAYd,GAAZ;AACH,GAzB+B,CA2BhC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAe,EAAAA,MAAM,GAAE;AACJ,SAAKhB,UAAL;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AA1C+B;;AA6ChC,eAAeL,OAAf","sourcesContent":["import React, {Component} from 'react'\nimport axios from 'axios'\n\nclass Youtube extends Component {\nconstructor(props) {\n    super(props)\n\n    this.state = {\n        youtube: \"\"\n    }\n}\n\nasync fetchVideo() {\n    let res = await axios.get(`https://www.googleapis.com/youtube/v3/search?key=AIzaSyDZ45_22-Kzo_oZGO0ClgxbX7vuvT3M5-wmaxResults=4&part=snippet&`, {\n        params: {\n            part: 'snippet',\n            maxResults: 5,\n            key: 'AIzaSyDZ45_22-Kzo_oZGO0ClgxbX7vuvT3M5-w',\n            q: this.props.inputValue,\n        }\n    })\n\n    componentDidMount = () => {\n        $.get(\"https://content.googleapis.com/youtube/v3/playlistItems?maxResults=4&part=snippet&playlistId={SOME_PLAYLIST_ID}&key={MY_API_KEY}\", (data) => {\n           this.setState({ items: data });\n        });\n      }\n    console.log(res)\n}\n\n//  searchByKeyword = () => {\n//     var results = YouTube.Search.list('id,snippet', {q: 'dogs', maxResults: 5});\n//     for(var i in results.items) {\n//       var item = results.items[i];\n//       Logger.log('[%s] Title: %s', item.id.videoId, item.snippet.title);\n//     }\n//   }\n\nrender(){\n    this.fetchVideo()\n    return (\n        <div>\n            <img src=\"\" />\n        </div>\n    )\n}\n}\n\nexport default Youtube;\n"]},"metadata":{},"sourceType":"module"}