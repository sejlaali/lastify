{"ast":null,"code":"var _jsxFileName = \"/Users/sejlaali/General_Assembly/sei/05-week/05-friday/Project2/project2/react-project2/src/Components/Input.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\nimport ResultDetails from \"./ResultDetails\";\nimport \"./Components.css\";\nimport OneResult from \"./OneResult\";\ndotenv.config();\nlet key = process.env.REACT_APP_API_KEY;\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = evt => {\n      this.setState({\n        inputValue: evt.currentTarget.value\n      });\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      if (this.state.inputValue === \"\") alert(\"Please type in artist name for results\");else {\n        option === \"artist\" ? url = \"http://ws.audioscrobbler.com/2.0/?method=artist.gettoptracks&artist=\".concat(this.state.inputValue, \"&api_key=\").concat(key, \"&limit=26&format=json\") : url = \"http://ws.audioscrobbler.com/2.0/?method=track.search&track=\".concat(this.state.inputValue, \"&api_key=\").concat(key, \"&format=json\");\n        axios.get(url).then(res => {\n          this.setState({\n            allResults: res.data.toptracks.track,\n            artist: this.state.inputValue,\n            activeSearch: true,\n            inputValue: \"\"\n          });\n        });\n      }\n    };\n\n    this.state = {\n      inputValue: \"\",\n      allResults: [],\n      activeSearch: false,\n      artist: \"\",\n      topTracks: []\n    };\n  }\n\n  componentDidMount() {\n    const url = \"http://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key=\".concat(key, \"&format=json\");\n    axios.get(url).then(res => {\n      this.setState({\n        topTracks: res.data.tracks.track\n      });\n    });\n  }\n\n  render() {\n    const header = this.state.activeSearch ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Currently Searching: \", this.state.artist.toUpperCase()) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Search Below\");\n    const topTracks = this.state.topTracks.map(track => React.createElement(\"div\", {\n      className: \"top-tracks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, track.name), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, track.artist.name)));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, header, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"song\",\n      value: this.state.inputValue,\n      placeholder: \"Search for an artist\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"artist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Artist\"), React.createElement(\"option\", {\n      value: \"song\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Song\")), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"ENTER\"))), React.createElement(\"div\", {\n      className: \"song-results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.allResults.map((result, i) => React.createElement(ResultDetails, {\n      result: result,\n      index: i,\n      inputValue: this.state.artist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Top Tracks\"), topTracks));\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["/Users/sejlaali/General_Assembly/sei/05-week/05-friday/Project2/project2/react-project2/src/Components/Input.jsx"],"names":["React","Component","axios","dotenv","ResultDetails","OneResult","config","key","process","env","REACT_APP_API_KEY","Input","constructor","props","handleChange","evt","setState","inputValue","currentTarget","value","handleSubmit","preventDefault","state","alert","option","url","get","then","res","allResults","data","toptracks","track","artist","activeSearch","topTracks","componentDidMount","tracks","render","header","toUpperCase","map","name","result","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport dotenv from \"dotenv\";\nimport ResultDetails from \"./ResultDetails\";\nimport \"./Components.css\";\nimport OneResult from \"./OneResult\";\n\ndotenv.config();\nlet key = process.env.REACT_APP_API_KEY;\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValue: \"\",\n      allResults: [],\n      activeSearch: false,\n      artist: \"\",\n      topTracks: []\n    };\n  }\n\n  handleChange = evt => {\n    this.setState({\n      inputValue: evt.currentTarget.value\n    });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    if (this.state.inputValue === \"\")\n      alert(`Please type in artist name for results`);\n    else {\n        (option === \"artist\") ? url = `http://ws.audioscrobbler.com/2.0/?method=artist.gettoptracks&artist=${this.state.inputValue}&api_key=${key}&limit=26&format=json` : url = `http://ws.audioscrobbler.com/2.0/?method=track.search&track=${this.state.inputValue}&api_key=${key}&format=json`\n\n    \n      axios.get(url).then(res => {\n        this.setState({\n          allResults: res.data.toptracks.track,\n          artist: this.state.inputValue,\n          activeSearch: true,\n          inputValue: \"\"\n        });\n      });\n    }\n  };\n\n  componentDidMount() {\n    const url = `http://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key=${key}&format=json`;\n    axios.get(url).then(res => {\n      this.setState({\n        topTracks: res.data.tracks.track\n      });\n    });\n  }\n\n  render() {\n    const header = this.state.activeSearch ? (\n      <h1>Currently Searching: {this.state.artist.toUpperCase()}</h1>\n    ) : (\n      <h1>Search Below</h1>\n    );\n    const topTracks = this.state.topTracks.map(track => (\n      <div className=\"top-tracks\">\n        <h4>{track.name}</h4>\n        <h5>{track.artist.name}</h5>\n      </div>\n    ));\n\n    return (\n      <div>\n        <div className=\"input\">\n          {header}\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"text\"\n              name=\"song\"\n              value={this.state.inputValue}\n              placeholder=\"Search for an artist\"\n              onChange={this.handleChange}\n            />\n            <select>\n              <option value=\"artist\">Artist</option>\n              <option value=\"song\">Song</option>\n            </select>\n            <button type=\"submit\">ENTER</button>\n          </form>\n        </div>\n        <div className=\"song-results\">\n          {this.state.allResults.map((result, i) => (\n            <ResultDetails\n              result={result}\n              index={i}\n              inputValue={this.state.artist}\n            />\n          ))}\n\n          <h2>Top Tracks</h2>\n          {topTracks}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}